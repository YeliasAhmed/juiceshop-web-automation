{
	"info": {
		"_postman_id": "10173eb8-8bbf-4c48-99df-69cbbec231b2",
		"name": "JuiceShopAPIAutomation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24971842"
	},
	"item": [
		{
			"name": "Additional",
			"item": [
				{
					"name": "CreateUser",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"yeliasahmed89@gmail.com\",\r\n    \"password\": \"Asdfgh#123\",\r\n    \"passwordRepeat\": \"Asdfgh#123\",\r\n    \"securityQuestion\": {\r\n        \"id\": 11,\r\n        \"question\": \"Your favorite book?\",\r\n        \"createdAt\": \"2024-06-04T11:17:41.544Z\",\r\n        \"updatedAt\": \"2024-06-04T11:17:41.544Z\"\r\n    },\r\n    \"securityAnswer\": \"quran\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/Users/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Users",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "test1",
			"item": [
				{
					"name": "Sign in the user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"pm.environment.set(\"token\", jsonData.authentication.token);\r",
									"pm.environment.set(\"email\", jsonData.authentication.umail);\r",
									"pm.environment.set(\"id\", jsonData.authentication.bid);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status String is OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Full Response Body Check\", function () {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"    pm.expect(jsonData.authentication).to.be.an(\"object\");\r",
									"    pm.expect(jsonData.authentication.token).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.authentication.bid).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.authentication.umail).to.be.a(\"string\");\r",
									"    \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"yeliasahmed89@gmail.com\",\r\n    \"password\": \"Asdfgh#123\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/rest/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "add 1 item to the basket",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"pm.environment.set(\"productId\", jsonData.data.ProductId);\r",
									"pm.environment.set(\"basketId\", jsonData.data.BasketId);\r",
									"pm.environment.set(\"basketItemId\", jsonData.data.id);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status String is Ok\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Full Response Body and Quantity check\", function () {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"    pm.expect(jsonData.status).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.data).to.be.a(\"object\");\r",
									"    pm.expect(jsonData.data.ProductId).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.data.quantity).to.equal(1);\r",
									"    \r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ProductId\": {{productId}},\r\n    \"BasketId\": {{basketId}},\r\n    \"quantity\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/BasketItems/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"BasketItems",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "verify that 1 item is in the basket",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status String is Ok\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Full Response Body and Quantity check\", function () {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"    pm.expect(jsonData.status).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.data).to.be.a(\"object\");\r",
									"    pm.expect(jsonData.data.id).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.data.coupon).to.be.a(\"null\");\r",
									"    pm.expect(jsonData.data.Products).to.be.a(\"array\");\r",
									"    pm.expect(jsonData.data.Products[0].name).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.data.Products[0].BasketItem).to.be.an(\"object\");\r",
									"    pm.expect(jsonData.data.Products[0].BasketItem.ProductId).to.be.an(\"number\");\r",
									"    pm.expect(jsonData.data.Products[0].BasketItem.BasketId).to.be.an(\"number\");\r",
									"    pm.expect(jsonData.data.Products[0].BasketItem.quantity).to.equal(1);\r",
									"    \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/basket/{{basketId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"basket",
								"{{basketId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status String is OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Full Response Body Check\", function () {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"    pm.expect(jsonData.status).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.data).to.be.an(\"object\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/BasketItems/{{basketItemId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"BasketItems",
								"{{basketItemId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "test2",
			"item": [
				{
					"name": "Sign the user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"pm.environment.set(\"token\", jsonData.authentication.token);\r",
									"pm.environment.set(\"email\", jsonData.authentication.umail);\r",
									"pm.environment.set(\"id\", jsonData.authentication.bid);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status String is OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Full Response Body Check\", function () {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"    pm.expect(jsonData.authentication).to.be.an(\"object\");\r",
									"    pm.expect(jsonData.authentication.token).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.authentication.bid).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.authentication.umail).to.be.a(\"string\");\r",
									"    \r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"yeliasahmed89@gmail.com\",\r\n    \"password\": \"Asdfgh#123\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/rest/user/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"user",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "add 1 item to the basket",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"pm.environment.set(\"productId1\", jsonData.data.ProductId);\r",
									"pm.environment.set(\"basketItemId1\", jsonData.data.id);\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status String is Ok\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Full Response Body and Quantity check\", function () {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"    pm.expect(jsonData.status).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.data).to.be.a(\"object\");\r",
									"    pm.expect(jsonData.data.ProductId).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.data.BasketId).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.data.quantity).to.equal(1);\r",
									"    \r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ProductId\": {{productId1}},\r\n    \"BasketId\": {{basketId}},\r\n    \"quantity\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/BasketItems/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"BasketItems",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "add 2nd item to the basket",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"pm.environment.set(\"productId2\", jsonData.data.ProductId);\r",
									"pm.environment.set(\"basketItemId2\", jsonData.data.id);\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status String is Ok\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Full Response Body and Quantity check\", function () {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"    pm.expect(jsonData.status).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.data).to.be.a(\"object\");\r",
									"    pm.expect(jsonData.data.ProductId).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.data.BasketId).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.data.quantity).to.equal(1);\r",
									"    \r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"ProductId\":{{productId2}},\r\n    \"BasketId\": {{basketId}},\r\n    \"quantity\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/api/BasketItems/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"BasketItems",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "verify 2 items in the basket",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status String is Ok\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Full Response Body and Quantity check\", function () {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"    pm.expect(jsonData.status).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.data).to.be.a(\"object\");\r",
									"    pm.expect(jsonData.data.id).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.data.coupon).to.be.a(\"null\");\r",
									"    pm.expect(jsonData.data.Products).to.be.a(\"array\");\r",
									"    pm.expect(jsonData.data.Products[0].name).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.data.Products[0].BasketItem).to.be.an(\"object\");\r",
									"    pm.expect(jsonData.data.Products[0].BasketItem.ProductId).to.be.an(\"number\");\r",
									"    pm.expect(jsonData.data.Products[0].BasketItem.BasketId).to.be.an(\"number\");\r",
									"    pm.expect(jsonData.data.Products.length).to.equal(2);\r",
									"    \r",
									"});\r",
									"pm.test(\"Verify that two items are in the basket\", function () {\r",
									"    pm.expect(jsonData.data.Products).to.be.an('array');\r",
									"    pm.expect(jsonData.data.Products.length).to.equal(2);\r",
									"\r",
									"});\r",
									"\r",
									"pm.test(\"Two products name\", function () {\r",
									"   \r",
									"    const productNames = jsonData.data.Products.map(product => product.name);\r",
									"    console.log(\"Product Names in the Basket:\", productNames.join(\", \"));\r",
									"\r",
									"    pm.expect(productNames).to.include(\"Apple Pomace\");\r",
									"    pm.expect(productNames).to.include(\"Banana Juice (1000ml)\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/basket/{{basketId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"basket",
								"{{basketId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete item 1 from the basket",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status String is OK\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Full Response Body Check\", function () {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"    pm.expect(jsonData.status).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.data).to.be.an(\"object\");\r",
									"\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/BasketItems/{{basketItemId1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"BasketItems",
								"{{basketItemId1}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "validate that only 1 item remains in the basket",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Status String is Ok\", function () {\r",
									"    pm.response.to.have.status(\"OK\");\r",
									"});\r",
									"pm.test(\"Full Response Body and Quantity check\", function () {\r",
									"    pm.expect(jsonData).to.be.an(\"object\");\r",
									"    pm.expect(jsonData.status).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.data).to.be.a(\"object\");\r",
									"    pm.expect(jsonData.data.id).to.be.a(\"number\");\r",
									"    pm.expect(jsonData.data.coupon).to.be.a(\"null\");\r",
									"    pm.expect(jsonData.data.Products).to.be.a(\"array\");\r",
									"    pm.expect(jsonData.data.Products[0].name).to.be.a(\"string\");\r",
									"    pm.expect(jsonData.data.Products[0].BasketItem).to.be.an(\"object\");\r",
									"    pm.expect(jsonData.data.Products[0].BasketItem.ProductId).to.be.an(\"number\");\r",
									"    pm.expect(jsonData.data.Products[0].BasketItem.BasketId).to.be.an(\"number\");\r",
									"    pm.expect(jsonData.data.Products.length).to.equal(1);\r",
									"    \r",
									"});\r",
									"\r",
									"pm.test(\"Verify that one item remains in the basket\", function () {\r",
									"    pm.expect(jsonData.data.Products).to.be.an('array');\r",
									"    pm.expect(jsonData.data.Products.length).to.equal(1);\r",
									"\r",
									"    const productNames = jsonData.data.Products.map(product => product.name);\r",
									"    console.log(\"Remains one item\", productNames.join(\", \"));\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Remaining one item name\", function () {\r",
									"   \r",
									"    const productNames = jsonData.data.Products.map(product => product.name);\r",
									"    console.log(\"Product Names in the Basket:\", productNames.join(\", \"));\r",
									"    pm.expect(productNames).to.include(\"Banana Juice (1000ml)\");\r",
									"   \r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/rest/basket/{{basketId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"rest",
								"basket",
								"{{basketId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}